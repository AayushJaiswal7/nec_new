import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import Breadcrumb from "../../../components/BreadCrumb";
import DropDown from "../../../components/Dropdown";
import InputField from "../../../components/InputField";
import TextareaField from "../../../components/TextareaField";
import DatePickerField from "../../../components/DatePickerField";
import ButtonComponent from "../../../components/ButtonComponent";

export default function PettyCashEntry() {
  const navigate = useNavigate();
  
  const items = [
    { label: "Petty Cash", href: "/petty-cash" },
    { label: "Petty Cash Entry", href: "/petty-cash-entry" },
  
  ];
   
    const handleBackRoute = () => {
     navigate(-1);
  };
  const [formData, setFormData] = useState({
    projectCode: "",
    site: "",
    card: "",
    costCode: "",
    date: "",
    description: "",
    payee: "",
    openingBalance: "",
    closingBalance: "",
    billNo: "",
    debitPayment: "",
    creditPayment: "",
    voucherNo: "",
  });

  const handleChange = (name, value) => setFormData({ ...formData, [name]: value });
  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("Saved:", formData);
  };
return (
  <>
    <Breadcrumb items={items} onBackRoute={handleBackRoute} />
    <div className="p-5 space-y-10">
      
      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-6">
        <DropDown
          label="Project Code"
          name="projectCode"
          placeholder="Select Project Code"
          value={formData.projectCode}
          options={[{ label: "Select Project Code", value: "" }]}
          onChange={(v) => handleChange("projectCode", v)}
        />

        <DropDown
          label="Site"
          name="site"
          placeholder={"Autogenerated"}
          value={formData.site}
          options={[{ label: "Select Site", value: "" }]}
          onChange={(v) => handleChange("site", v)}
        />

        <DropDown
          label="Card"
          name="card"
          placeholder="Select Card"
          value={formData.card}
          options={[{ label: "Select Card", value: "" }]}
          onChange={(v) => handleChange("card", v)}
        />
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-6">
        <DropDown
          label="Cost Code"
          name="costCode"
          placeholder="Select Cost Code"
          value={formData.costCode}
          options={[{ label: "Select Cost Code", value: "" }]}
          onChange={(v) => handleChange("costCode", v)}
        />

        <DatePickerField
          label="Date"
          name="date"
          placeholder={"DDMMYYYY"}
          value={formData.date}
          onChange={(v) => handleChange("date", v)}
        />
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
        <TextareaField
          label="Description"
          name="description"
          placeholder="Enter Description here"
          value={formData.description}
          onChange={(v) => handleChange("description", v)}
        />
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-6">
        <InputField
          label="Payee/Paid To"
          name="payee"
          placeholder="Enter Payee Name"
          value={formData.payee}
          onChange={(e) => handleChange("payee", e.target.value)}
        />

        <InputField
          label="Opening Balance"
          name="openingBalance"
          placeholder="Enter Opening Balance"
          value={formData.openingBalance}
          onChange={(e) => handleChange("openingBalance", e.target.value)}
        />

        <InputField
          label="Closing Balance"
          name="closingBalance"
          placeholder="Enter Closing Balance"
          value={formData.closingBalance}
          onChange={(e) => handleChange("closingBalance", e.target.value)}
        />
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-6">
        <InputField
          label="Bill No"
          name="billNo"
          placeholder="Enter Bill No"
          value={formData.billNo}
          onChange={(e) => handleChange("billNo", e.target.value)}
        />

        <InputField
          label="Debit Payment"
          name="debitPayment"
          placeholder="Enter Debit Payment"
          value={formData.debitPayment}
          onChange={(e) => handleChange("debitPayment", e.target.value)}
        />

        <InputField
          label="Credit Payment"
          name="creditPayment"
          placeholder="Enter Credit Payment"
          value={formData.creditPayment}
          onChange={(e) => handleChange("creditPayment", e.target.value)}
        />

        <InputField
          label="Voucher No"
          name="voucherNo"
          placeholder="Enter Voucher No"
          value={formData.voucherNo}
          onChange={(e) => handleChange("voucherNo", e.target.value)}
        />
      </div>

      <div className="flex justify-start">
        <ButtonComponent
          type="submit"
          text="Save"
          title="Save"
          className="bg-orange-500 text-white"
        />
      </div>
    </div>
  </>
);

}
